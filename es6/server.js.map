{"version":3,"sources":["../src/server.js"],"names":["log","DebugServer","constructor","onTargets","targets","sockets","sessions","callOnTargets","Object","keys","app","set","process","env","PORT","use","static","get","req","res","json","msg","count","length","sessionId","params","session","sessionTargets","send","server","Server","listen","settings","io","on","socket","startTime","Date","getTime","endTime","duration","console","err","data","webSocketUrl","WEBSOCKET_DOMAIN","push","description","devtoolsFrontendUrl","devtoolsUrl","id","title","type","url","webSocketDebuggerUrl","emit","Relay","noServer","request","head","pathname","parse","names","split","destroy","handleUpgrade","conn","handleConnection","pageId","close","forwardMessage","JSON","stringify","method","removeAllListeners","message","e"],"mappings":"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","file":"server.js","sourcesContent":["import express from 'express'\nimport http from 'http'\nimport { Server } from 'ws'\nimport uuid from 'node-uuid'\nimport debug from 'debug'\nimport url from 'url'\nimport socketio from 'socket.io'\n\nconst log = debug('server')\n\nexport default class DebugServer {\n  constructor({ onTargets }) {\n    var targets = {}\n    var sockets = {}\n    var sessions = {}\n\n    function callOnTargets() {\n      onTargets(Object.keys(targets))\n    }\n\n    var app = express()\n    app.set('port', process.env.PORT || 8000)\n    app.use(express.static('web'))\n\n    app.get('/', function(req, res) {\n      log('http:index')\n      res.json({\n        msg: 'Hello from DevToolsRemote',\n      })\n    })\n\n    app.get('/sessions', function(req, res) {\n      res.json(sessions)\n    })\n\n    app.get('/_stats', function(req, res) {\n      log('http:stats')\n      res.json({\n        count: {\n          targets: Object.keys(targets).length,\n          sockets: Object.keys(sockets).length,\n          sessions: Object.keys(sessions).length,\n        },\n      })\n    })\n\n    app.get('/:session/json', function(req, res) {\n      var sessionId = req.params.session\n      var sessionTargets = targets[sessionId]\n      res.send(sessionTargets)\n    })\n\n    // server\n    const server = http.Server(app)\n    server.listen(app.get('port'), function() {\n      log(\n        '-:listening on port %d in %s mode',\n        app.get('port'),\n        app.settings.env,\n      )\n    })\n\n    // handle connection from browser socket\n    const io = socketio(server)\n    io.sockets.on('connection', function(socket) {\n      const sessionId = uuid()\n      log('socket:connection', sessionId)\n      targets[sessionId] = []\n      sockets[sessionId] = socket\n      sessions[sessionId] = {\n        startTime: new Date().getTime(),\n      }\n      socket.on('disconnect', () => {\n        log('socket:disconnect')\n        var session = sessions[sessionId]\n        var endTime = new Date().getTime()\n        var duration = endTime - session.startTime\n        console.log('duration', duration)\n        delete targets[sessionId]\n        delete sockets[sessionId]\n        delete sessions[sessionId]\n        callOnTargets()\n      })\n      socket.on('error', function(err) {\n        log('socket:error', err)\n      })\n      socket.on('hello', data => {\n        log('socket:hello', data)\n        var webSocketUrl =\n          (process.env.WEBSOCKET_DOMAIN\n            ? process.env.WEBSOCKET_DOMAIN\n            : 'localhost:' + app.get('port')) +\n          '/devtools/page/' +\n          sessionId\n        targets[sessionId].push({\n          description: '',\n          devtoolsFrontendUrl: '/devtools/devtools.html?ws=' + webSocketUrl,\n          devtoolsUrl:\n            'chrome-devtools://devtools/remote/serve_rev/@8925c3c45f3923bc78ffc841842183cc592a0143/inspector.html?wss=' +\n            webSocketUrl +\n            '&remoteFrontend=true&dockSide=unlocked&experiments=true',\n          id: uuid(),\n          title: data.title,\n          type: 'page',\n          url: data.url,\n          webSocketDebuggerUrl: 'ws://' + webSocketUrl,\n        })\n        callOnTargets()\n        socket.emit('sessionCreated', sessionId)\n      })\n    })\n\n    // relay to other devtools\n    const Relay = new Server({ noServer: true })\n    Relay.on('error', err => console.log('Relay:err', err))\n    server.on('upgrade', (request, socket, head) => {\n      const { pathname } = url.parse(request.url)\n      const names = pathname.split('/')\n      if (names[1] !== 'devtools') {\n        socket.destroy()\n        return\n      }\n      const id = names[names.length - 1]\n      Relay.handleUpgrade(request, socket, head, conn => {\n        log('upgrading...', id)\n        handleConnection(id, conn)\n      })\n    })\n    function handleConnection(pageId, conn) {\n      const socket = sockets[pageId]\n      if (!socket) {\n        console.log('closing with 1011')\n        return conn.close(1011, 'Matching socket not found :/')\n      }\n      log('relay:connected', pageId)\n      const forwardMessage = data => conn.send(JSON.stringify(data))\n      socket.on('data.response', data => {\n        log('relay:data:response', data.id)\n        forwardMessage(data)\n      })\n      socket.on('data.event', data => {\n        log('relay:data:event', data.method)\n        forwardMessage(data)\n      })\n      conn.on('close', () => {\n        log('relay:close')\n        socket.removeAllListeners('data.response')\n        socket.removeAllListeners('data.event')\n      })\n      conn.on('error', err => log('relay:error', err))\n      conn.on('message', data => {\n        log('relay:message')\n        try {\n          const message = JSON.parse(data)\n          socket.emit('data.request', message)\n        } catch (e) {\n          log('relay:err:parsing', data)\n        }\n      })\n    }\n  }\n}\n"]}